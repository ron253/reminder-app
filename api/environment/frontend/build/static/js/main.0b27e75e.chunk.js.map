{"version":3,"sources":["components/Navbar.jsx","components/Actions.jsx","components/Header.jsx","components/ReminderLists.jsx","components/PriorityContext.js","Reminder/reminder.jsx","Home/home.jsx","components/PriorityLists.jsx","Tasks/tasks.jsx","Settings/settings.jsx","components/RegisterForm.jsx","components/LoginForm.jsx","components/App.jsx","index.js"],"names":["NavBar","className","Nav","vertical","NavItem","to","icon","faStar","faBell","faClipboardList","faCog","size","Delete","props","onClick","filter","setFilterItems","faTrash","Refresh","setRefresh","refresh","name","faSyncAlt","Add","addToDos","faPlus","Header","header","PriorityHeader","Date","toDateString","ReminderLists","useState","isChecked","setChecked","text_value","changeInput","setChangeInput","date","reminderDate","setReminderDate","time","reminderTime","setReminderTime","notifyDesktop","enableDesktopNotification","setEnableDesktopNotification","dailyReminder","daily","setDaily","weeklyReminder","weekly","setWeekly","monthlyReminder","monthly","setMonthly","yearlyReminder","yearly","setYearly","unsubscribe","setUnsubscribe","reminderText","id","storeFormData","publicKey","baseUrl","token","urlB64ToUint8Array","base64String","base64","repeat","length","replace","rawData","window","atob","outputArray","Uint8Array","i","charCodeAt","Form","unique_Key","onInput","e","target","checked","id_to_be_deleted","attributes","getNamedItem","value","addIds","check","type","aria-label","onChange","setChange","class","rows","min","max","required","OverlayTrigger","trigger","key","placement","overlay","Popover","Title","as","Content","for","Button","variant","a","navigator","serviceWorker","register","then","serviceWorkerRegistration","console","log","update","catch","error","Notification","requestPermission","result","getRegistration","registration","pushManager","getSubscription","subscribed","fetch","method","headers","body","JSON","stringify","res","json","subscribe","userVisibleOnly","applicationServerKey","subscription","preventDefault","notify","faInfoCircle","PriorityContext","React","createContext","Reminder","toDo","setToDo","idsToRefresh","setIdsToRefresh","filter_items","ids","setIds","useContext","jwt_decode","item","useEffect","arrItems","map","subscriptionId","_Id","item_value","text","concat","undefined","includes","url","URL","params","Object","keys","forEach","searchParams","append","uuidv4","Home","quote","setQuote","author","setAuthor","priorityLists","PriorityLists","local_storage","Task","decodedPublicId","ls","localStorage","setItem","serialize","public_id","unique_key","arr","getKey","parse","getItem","push","removeItem","Settings","setToken","history","useHistory","onSubmit","response","logOut","RegisterForm","passwordError","setPasswordError","duplicateEmailError","setEmailError","setAccountCreatedMessage","setValue","form","useRef","ref","data","FormData","current","message","action","Group","controlId","Label","Control","placeholder","Text","minlength","maxlength","muted","LoginForm","showAccountCreatedMessage","setError","errorMessage","role","App","exact","path","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0b27e75e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Nav, NavItem} from 'reactstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faStar, faBell, faClipboardList, faCog} from '@fortawesome/free-solid-svg-icons'\r\nimport {Link} from \"react-router-dom\";\r\n\r\n\r\nfunction NavBar() {\r\n    \r\n    return (\r\n        <div className = \"sideBar\">\r\n            <Nav vertical>\r\n                <NavItem className = \"mb-5\">\r\n                    <Link  to = \"/quote\" className = \"text-success\" ><span className = \"text ml-5\"><FontAwesomeIcon icon = {faStar}/>Daily Quotes</span></Link>\r\n                </NavItem>\r\n                <NavItem className = \"mb-5\">\r\n                    <Link  to = \"/reminders/user\" className = \"text-success\" ><span className = \"text ml-5\"><FontAwesomeIcon icon = {faBell}/> Reminder</span></Link>\r\n                </NavItem>\r\n                <NavItem>\r\n                    <Link to = \"/tasks\" className = \"text-success\" ><span className = \"text ml-5\"><FontAwesomeIcon icon = {faClipboardList}/> Tasks</span></Link>\r\n                </NavItem>\r\n                \r\n                <NavItem className = \"fixed-bottom\">\r\n                    <Link to = \"/settings\" className = \"text-success\">\r\n                        <FontAwesomeIcon icon = {faCog} size = \"2x\" />\r\n                    </Link>\r\n                </NavItem>\r\n            \r\n            </Nav>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default NavBar;\r\n\r\n\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faSyncAlt, faTrash, faPlus} from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nfunction Delete(props) {\r\n\r\n    function switchNow() {\r\n        if(!props.filter) {\r\n            props.setFilterItems(true);\r\n            \r\n        }\r\n        else {\r\n            props.setFilterItems(false);\r\n        }\r\n    }\r\n\r\n\r\n    return <button className = \"float-right app-btns \">\r\n        <FontAwesomeIcon onClick = {switchNow} icon = {faTrash} size = \"2x\" />\r\n    </button>\r\n}\r\n\r\nfunction Refresh(props) {\r\n\r\n    return <button className = \"app-btns\" onClick = {()=> {props.setRefresh(!props.refresh)}} name= \"refresh\">\r\n        <FontAwesomeIcon icon = {faSyncAlt} size = \"2x\" />\r\n    </button>\r\n}\r\n\r\nfunction Add(props) {\r\n   \r\n    return <button className = \"float-right app-btns \" onClick = {()=> props.addToDos()}  name = \"add\">\r\n        <FontAwesomeIcon icon = {faPlus} size = \"2x\" />\r\n    </button>\r\n}\r\n\r\n\r\n\r\nexport {Delete, Refresh, Add};","import React from \"react\";\r\n\r\n\r\n\r\n\r\nfunction Header(props) {\r\n    return (\r\n        <div >\r\n            <h1><span className = \"green\">{props.header}</span></h1>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nfunction PriorityHeader() {\r\n    function getDate() {\r\n        return new Date().toDateString();\r\n    }\r\n\r\n    return (\r\n    <div>\r\n         <h1><span className = \"green\">Quote of The Day</span></h1>\r\n        <p>{getDate()}</p>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport {PriorityHeader, Header}","import React, {useState} from \"react\";\r\n\r\n\r\nimport {Form, Button,Popover, OverlayTrigger} from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faInfoCircle} from '@fortawesome/free-solid-svg-icons'\r\n\r\n\r\nfunction ReminderLists(props) {\r\n\r\n    const [isChecked, setChecked] = useState(false);\r\n    const [changeInput, setChangeInput] = useState(props.text_value);\r\n    const [reminderDate, setReminderDate] = useState(props.date)\r\n    const [reminderTime, setReminderTime] = useState(props.time)\r\n    const [enableDesktopNotification, setEnableDesktopNotification] = useState(props.notifyDesktop)\r\n    const [daily, setDaily] = useState(props.dailyReminder)\r\n    const [weekly, setWeekly] = useState(props.weeklyReminder)\r\n    const [monthly, setMonthly] = useState(props.monthlyReminder)\r\n    const [yearly, setYearly] = useState(props.yearlyReminder)\r\n    const [unsubscribe, setUnsubscribe] = useState(props.unsubscribe)\r\n\r\n\r\n    const [storeFormData, setFormData] = useState({\r\n        reminderText: \"\", \r\n        reminderDate: props.date,\r\n        reminderTime: props.time,\r\n        enableDesktopNotification: props.notifyDesktop,\r\n        daily: props.dailyReminder,\r\n        weekly: props.weeklyReminder,\r\n        monthly: props.monthlyReminder,\r\n        yearly:props.yearlyReminder,\r\n        unsubscribe: props.unsubscribe,\r\n        id: props.id\r\n    })\r\n \r\n    const publicKey = \"BJC37iFk2x1EjU-lVHrivl3QsFe2AiI43rBuXcT-3HX7lElLL4k3xNlmxr7k7tjPDiuzoFcZ8zB4PJB_7opIyW0\"\r\n    const baseUrl = \"https://desktop-reminder.herokuapp.com/notification\";\r\n    const submissionUrl = \"https://desktop-reminder.herokuapp.com/reminders\";\r\n  \r\n\r\n    const header = {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': props.token,\r\n    }\r\n \r\n\r\n\r\n\r\n    function check(e) {\r\n        const id_to_be_deleted = e.target.attributes.getNamedItem(\"unique_Key\").value;\r\n       \r\n        if(!isChecked) {\r\n            setChecked(true);\r\n            props.addIds(isChecked, id_to_be_deleted);\r\n\r\n        }\r\n\r\n        else {\r\n            setChecked(false);\r\n            props.addIds(isChecked, id_to_be_deleted)\r\n        }\r\n    }\r\n\r\n    function setChange(e) {\r\n        setChangeInput(e.target.value);\r\n    \r\n        storeFormData.reminderText=e.target.value\r\n      \r\n    }\r\n\r\n    function urlB64ToUint8Array(base64String) {\r\n        const padding = '='.repeat((4 - base64String.length % 4) % 4);\r\n        const base64 = (base64String + padding)\r\n            .replace(/\\-/g, '+')\r\n            .replace(/_/g, '/');\r\n    \r\n        const rawData = window.atob(base64);\r\n        const outputArray = new Uint8Array(rawData.length);\r\n    \r\n        for (let i = 0; i < rawData.length; ++i) {\r\n            outputArray[i] = rawData.charCodeAt(i);\r\n        }\r\n        return outputArray;\r\n    }\r\n    \r\n\r\n    function handleSubmit(e) {\r\n\r\n        \r\n        e.preventDefault();\r\n        fetch(submissionUrl, {\r\n          method: 'POST',\r\n          headers:header,\r\n          body: JSON.stringify(storeFormData)\r\n        }).then(res=>res.json()).then( ()=> {\r\n            notify()\r\n        })\r\n\r\n\r\n        async function notify() {\r\n            if ('serviceWorker' in navigator && 'PushManager' in window) {\r\n                navigator.serviceWorker.register(\"/sw.js\").then(serviceWorkerRegistration => {\r\n                  console.log('Service worker was registered.');\r\n                  console.log({serviceWorkerRegistration});\r\n                  serviceWorkerRegistration.update()\r\n                }).catch(error => {\r\n                  console.log('An error occurred while registering the service worker.');\r\n                  console.log(error);\r\n                });\r\n              \r\n              } else {\r\n                console.log('Browser does not support service workers or push messages.');\r\n                return;\r\n            }\r\n\r\n            const result = await Notification.requestPermission();\r\n            console.log(\"Permission \" + result)\r\n            if (result === 'denied') {\r\n                console.log('The user explicitly denied the permission request.');\r\n                return;\r\n            }\r\n            if (result === 'granted') {\r\n                console.log('The user accepted the permission request.');\r\n\r\n                const registration = await navigator.serviceWorker.getRegistration();\r\n                const subscribed = await registration.pushManager.getSubscription();\r\n\r\n                if(storeFormData.unsubscribe) {\r\n                    const unsubscribed = await subscribed.unsubscribe();\r\n                    if (unsubscribed) {\r\n                        console.log('Successfully unsubscribed from push notifications.');\r\n                        fetch(baseUrl, {\r\n                            method: \"DELETE\", \r\n                            headers:header\r\n\r\n                        })\r\n                    }\r\n                    else {\r\n                        console.log('Cannot unsubscribe from push notifications.');\r\n                    }\r\n                    return;\r\n                }\r\n                if (subscribed) {\r\n                    console.log('User is already subscribed.');\r\n                    \r\n                    fetch(baseUrl, {\r\n                        method: \"POST\", \r\n                        headers:header,\r\n                        body: JSON.stringify({\"subscription\": \" \", \"subscriptionId\": props.id, \"daily\":storeFormData.daily, \r\n                        \"weekly\": storeFormData.weekly, \"yearly\": storeFormData.yearly, \"monthly\": storeFormData.monthly})\r\n                    }).then(res=>res.json()).then(res=> console.log(res))\r\n                    return;\r\n                }\r\n                \r\n              \r\n          \r\n                const subscription = await registration.pushManager.subscribe({\r\n                    userVisibleOnly: true,\r\n                    applicationServerKey:  urlB64ToUint8Array(publicKey)\r\n                   \r\n                });\r\n\r\n                fetch(baseUrl, {\r\n                    method: \"POST\", \r\n                    headers:header,\r\n                    body: JSON.stringify({\"subscription\":subscription, \"subscriptionId\": props.id, \"daily\":storeFormData.daily, \r\n                    \"weekly\": storeFormData.weekly, \"yearly\": storeFormData.yearly, \"monthly\": storeFormData.monthly})\r\n                })\r\n         \r\n            }\r\n        }\r\n\r\n      \r\n\r\n    }\r\n    \r\n\r\n    return ( \r\n        <Form>\r\n            <fieldset>\r\n                <div className = \"input-group mb-3\">\r\n                    <div className=\"input-group-prepend\">\r\n                        <div className=\"input-group-text\">\r\n                            <input unique_Key = {props.id}   onInput = {e=>   e.target.checked = isChecked} onClick={e=> check(e) } checked = {props.checked} id = \"check-item\" type=\"checkbox\" aria-label=\"Checkbox for following text input\"/>\r\n                        </div>\r\n                    </div>\r\n                    <textarea id = {props.id} onChange = {e=>setChange(e)} value = {changeInput}  class=\"form-control\"  rows=\"1\" name = \"reminderText\" ></textarea>\r\n                    <input type=\"date\" id=\"start\" name=\"reminderDate\" \r\n                        onChange = {(e)=> {\r\n                            setReminderDate(e.target.value) \r\n                            storeFormData.reminderDate = e.target.value\r\n                            \r\n                        }}\r\n                        value = {reminderDate}\r\n                        \r\n                        ></input>\r\n                    <input type=\"time\" id=\"appt\" name=\"reminderTime\" min=\"09:00\" max=\"18:00\"\r\n                    \r\n                     onChange = {(e)=> {\r\n\r\n                        setReminderTime(e.target.value) \r\n                        storeFormData.reminderTime = e.target.value\r\n                     }\r\n\r\n                        \r\n                        \r\n                        } value = {reminderTime}  required ></input>\r\n\r\n\r\n                    <OverlayTrigger\r\n                    trigger=\"click\"\r\n                    key={'bottom'}\r\n                    placement={'bottom'}\r\n                    overlay={\r\n                    <Popover id={`popover-positioned-${'bottom'}`}>\r\n                        <Popover.Title as=\"h3\">{`Notification Settings`}</Popover.Title>\r\n                        <Popover.Content>\r\n         \r\n\r\n                        <div>\r\n                            <input  type=\"checkbox\" id=\"desktop\" name=\"enableDesktopNotification\" value=\"desktop\"\r\n                            onChange = {()=>  {\r\n\r\n                                \r\n                                setEnableDesktopNotification(!enableDesktopNotification)\r\n                                storeFormData.enableDesktopNotification = !storeFormData.enableDesktopNotification\r\n                            }\r\n                            \r\n                \r\n                            \r\n                            }\r\n                            checked = {enableDesktopNotification}\r\n                            >\r\n\r\n\r\n\r\n                            </input>\r\n                            <label className = \"padding-left\" for=\"desktop\">Enable Desktop</label>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <input  type=\"checkbox\" id=\"desktop\" name=\"unsubscribeToNotifications\" value=\"desktop\"\r\n                            onChange = {()=> {\r\n\r\n                                setUnsubscribe(!unsubscribe)\r\n                                storeFormData.unsubscribe = !storeFormData.unsubscribe\r\n\r\n                            }\r\n                            \r\n                            \r\n                            \r\n                             \r\n                             \r\n                              } checked = {unsubscribe}>\r\n                            </input>\r\n                            <label  for=\"desktop\">Unsubscribe From Notification</label>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <input  type=\"checkbox\" id=\"daily\" name=\"daily\" value=\"daily\"\r\n                            onChange = {()=> {\r\n\r\n                                setDaily(!daily)\r\n                                storeFormData.daily = !storeFormData.daily\r\n\r\n                            }\r\n                            \r\n                          \r\n                            \r\n                            \r\n                            \r\n                            } checked = {daily}>\r\n                            </input>\r\n                            <label className = \"padding-left\" for=\"daily\">Daily</label>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <input  type=\"checkbox\" id=\"weekly\" name=\"weekly\" value=\"weekly\"\r\n                            onChange = {()=>  {\r\n                                setWeekly(!weekly)\r\n                                storeFormData.weekly = !storeFormData.weekly\r\n                            }\r\n                            \r\n                           \r\n                            \r\n                            } checked = {weekly}>\r\n                            </input>\r\n                            <label className = \"padding-left\" for=\"weekly\">Weekly</label>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <input  type=\"checkbox\" id=\"monthly\" name=\"monthly\" value=\"monthly\"\r\n                            onChange = {()=>  {\r\n                                setMonthly(!monthly)\r\n                                storeFormData.monthly = !storeFormData.monthly\r\n                            }\r\n                            \r\n                            \r\n                             \r\n                             } checked = {monthly}>\r\n                            </input>\r\n                            <label className = \"padding-left\" for=\"monthly\">Monthly</label>\r\n                        </div>\r\n\r\n                        <div>\r\n                            <input  type=\"checkbox\" id=\"yearly\" name=\"yearly\" \r\n                            onChange = {()=> {\r\n\r\n                                setYearly(!yearly)\r\n                                storeFormData.yearly = !storeFormData.yearly\r\n                            }\r\n                            \r\n                           \r\n                             \r\n                             \r\n                             } checked = {yearly}>\r\n                            </input>\r\n                            <label className = \"padding-left\" for=\"yearly\">Yearly</label>\r\n                        </div>\r\n\r\n                        <Button variant=\"primary\" size=\"sm\" type=\"submit\" onClick = {handleSubmit}>Save</Button>\r\n                 \r\n                       \r\n                        </Popover.Content>\r\n                    </Popover>\r\n                    }>\r\n\r\n                    <Button className = \"black app-btns \" id=\"Popover1\" type=\"button\">\r\n                        <FontAwesomeIcon icon = {faInfoCircle} size = \"2x\" />\r\n                    </Button>\r\n                    </OverlayTrigger>\r\n                </div>\r\n            </fieldset>\r\n        </Form>\r\n\r\n\r\n\r\n   \r\n    )\r\n}\r\n\r\nexport {ReminderLists};\r\n\r\n","import React from 'react';\r\n\r\n\r\n\r\nconst PriorityContext = React.createContext();\r\n\r\nexport default PriorityContext;","import React, {useState, useEffect}  from \"react\";\r\nimport {Delete, Refresh, Add} from \"../components/Actions\";\r\nimport {Header} from \"../components/Header\";\r\nimport {ReminderLists} from \"../components/ReminderLists\";\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport { serialize} from \"react-serialize\";\r\nimport PriorityContext from \"../components/PriorityContext\";\r\nimport jwt_decode from \"jwt-decode\"\r\n\r\nfunction Reminder() {\r\n    const [toDo, setToDo] = useState([]);\r\n    const [idsToRefresh, setIdsToRefresh] = useState([]);\r\n    const [filter_items, setFilterItems] = useState(false);\r\n    const [ids, setIds] = useState([]);\r\n    const {token} = React.useContext(PriorityContext);\r\n    const [refresh, setRefresh] = useState(false);\r\n    const decodedPublicId = jwt_decode(token)['public_id'];\r\n  \r\n    const header = {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': token,\r\n    }\r\n\r\n    const baseUrl = \"https://desktop-reminder.herokuapp.com/reminders/user\";\r\n \r\n    useEffect(()=> {\r\n        fetch(baseUrl, {\r\n            method: 'GET',\r\n            headers:header\r\n        }).then(res=>res.json()).then(res=> {\r\n\r\n            let arrItems = res[\"items\"].map(item=> {\r\n                setIdsToRefresh([...idsToRefresh, item.subscriptionId])\r\n                return {\r\n                    _Id: item.subscriptionId, \r\n                    item_value: \r\n                        <ReminderLists \r\n                            id = {item.subscriptionId} \r\n                            checked = {false}\r\n\r\n                            addIds = {addIds} \r\n                    \r\n                            text_value = {item.text}  \r\n                            date = {item.reminderDate}\r\n                            time = {item.reminderTime}\r\n                            notifyDesktop = {item.notifyDesktop}\r\n                            dailyReminder = {item.dailyReminder}\r\n                            weeklyReminder = {item.weeklyReminder}\r\n                            monthlyReminder = {item.monthlyReminder}\r\n                            yearlyReminder = {item.yearlyReminder}\r\n                            unsubscribe  = {item.unsubscribe}\r\n                            token = {token} \r\n\r\n                        />\r\n                }\r\n            \r\n            })\r\n\r\n            setToDo(toDo.concat([...arrItems, toDo]));\r\n\r\n\r\n        })\r\n   \r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if(toDo[0] !== undefined) {\r\n           \r\n\r\n            if(filter_items) {\r\n                setToDo(toDo.filter(item=> {\r\n                    return !ids.includes(item._Id);\r\n                }))\r\n    \r\n                let url = new URL(baseUrl);\r\n                let params = {\"SubscriptionIds\" : [...ids]};\r\n                Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\r\n                fetch(url, {\r\n                    method: 'DELETE',\r\n                    headers:header\r\n                }).then(res=>res.json()).then(res=> \r\n                    console.log(res)\r\n                )\r\n            }\r\n               \r\n\r\n            if(refresh) {\r\n                setToDo(toDo.filter(item=> {\r\n                    return !idsToRefresh.includes(item._Id)\r\n                }))\r\n\r\n                let url = new URL(baseUrl);\r\n                let params = {\"SubscriptionIds\": [...idsToRefresh]}\r\n\r\n                Object.keys(params).forEach(key => url.searchParams.append(key, params[key]));\r\n                fetch(url, {\r\n                    method: 'DELETE',\r\n                    headers:header\r\n                }).then(res=>res.json()).then(res=> \r\n                    console.log(res)\r\n                )\r\n\r\n\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }, [filter_items, refresh]);\r\n\r\n    function addIds(checked, id_to_be_deleted) {\r\n        if(!checked) {\r\n            setIds((item)=> [...item, id_to_be_deleted]);\r\n        }\r\n        else {\r\n            setIds(ids.filter(item=> {\r\n                return item !== id_to_be_deleted;\r\n            }))\r\n        }\r\n    }\r\n\r\n\r\n\r\n    function addToDos() {\r\n        const id = uuidv4();\r\n        setToDo(toDo.concat(\r\n            {_Id: id, \r\n            item_value:\r\n            <ReminderLists  \r\n            id = {id} \r\n            checked = {false} \r\n            addIds = {addIds} \r\n      \r\n            text_value = {null} \r\n            date = {\"\"}\r\n            time = {\"\"}\r\n            notifyDesktop = {false}\r\n            dailyReminder = {false}\r\n            weeklyReminder = {false}\r\n            monthlyReminder = {false}\r\n            yearlyReminder = {false}\r\n            unsubscribe  = {false}\r\n            token = {token} \r\n\r\n            />}));\r\n        setIdsToRefresh(idsToRefresh.concat(id));\r\n     \r\n      \r\n    }\r\n\r\n\r\n\r\n  \r\n\r\n\r\n    return (\r\n    <div className = \"main-content\">\r\n        <div className = \"container-fluid\">\r\n            <div className = \"row underline\">\r\n                <div className= \"col\">\r\n                    <div className = \"row\">\r\n                    <div className = \"col-3 pt-2\">\r\n                        <Refresh setRefresh = {setRefresh} refresh = {refresh} />\r\n                    </div>\r\n\r\n                    <div className = \"col-6 text-center\">\r\n                        <Header header = {\"Reminders\"} />\r\n                    </div>\r\n\r\n                    <div className = \"col-3 pt-2\">\r\n                        <Delete setFilterItems = {setFilterItems} filter = {filter_items} />\r\n                    </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className = \"row\">\r\n                <div className = \"col\">\r\n                    {\r\n                   toDo.map(item=> {\r\n                       return (<div key = {item._Id}> \r\n                       <ul>\r\n                           <li>{item.item_value} </li>\r\n                         \r\n                       </ul>\r\n                       </div>)\r\n                   })}\r\n                   \r\n\r\n                     \r\n                    \r\n                </div>\r\n            </div>\r\n            <div className = \"row\">\r\n               \r\n                <div className = \"col pr-4\">\r\n                    <Add addToDos = {addToDos} />\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        \r\n        </div>\r\n    </div>\r\n    \r\n    )\r\n}\r\n\r\nexport default Reminder;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, {useState, useEffect} from \"react\";\r\nimport {PriorityHeader} from \"../components/Header\";\r\n\r\n\r\nimport PriorityContext from \"../components/PriorityContext\";\r\n\r\n\r\n\r\n\r\nfunction Home() {\r\n    const [quote, setQuote] = useState([])\r\n    const [author, setAuthor] = useState()\r\n    const {priorityLists} = React.useContext(PriorityContext);\r\n    const {token} = React.useContext(PriorityContext);\r\n\r\n    const header = {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': token,\r\n    }\r\n\r\n    useEffect(()=> {\r\n        fetch(\"https://desktop-reminder.herokuapp.com/quote\", {\r\n            method: \"GET\", \r\n            headers:header\r\n        }).then(res=>res.json()).then(res=> {\r\n            setQuote(res.quote)\r\n            setAuthor(res.author)\r\n        })\r\n\r\n\r\n    }, [])\r\n    return (\r\n\r\n        <div className = \"main-content\">\r\n            <div className = \"container-fluid\">\r\n                <div className = \"row underline\">\r\n                    <div className= \"col text-center\">\r\n                        <PriorityHeader />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className = \"row\">\r\n                    <div className = \"col\">\r\n                        {\r\n                            quote.map(quote=> {\r\n                                return (\r\n                                <div> \r\n                                    <blockquote id = \"quote\">\r\n                                        {quote}\r\n                                    </blockquote>\r\n                                    <footer><span>-</span>{author}</footer>\r\n\r\n                                </div>)\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;\r\n\r\n\r\n","import React, {useState} from \"react\";\r\n\r\n\r\n\r\n\r\n\r\nfunction PriorityLists(props) {\r\n    const [isChecked, setChecked] = useState(false);\r\n    const [changeInput, setChangeInput] = useState(props.text_value);\r\n\r\n\r\n\r\n    function check(e) {\r\n        const id_to_be_deleted = e.target.attributes.getNamedItem(\"unique_Key\").value;\r\n       \r\n        if(!isChecked) {\r\n            setChecked(true);\r\n            props.addIds(isChecked, id_to_be_deleted);\r\n\r\n        }\r\n\r\n        else {\r\n            setChecked(false);\r\n            props.addIds(isChecked, id_to_be_deleted)\r\n        }\r\n    }\r\n\r\n    function setChange(e) {\r\n        setChangeInput(e.target.value);\r\n        props.local_storage(e);\r\n    }\r\n\r\n    \r\n\r\n    return ( \r\n    <form key = {props.id}  >\r\n       <div className = \"input-group mb-3\">\r\n            <div className=\"input-group-prepend\">\r\n                <div className=\"input-group-text\">\r\n                <input unique_Key = {props.id}   onInput = {e=>   e.target.checked = isChecked} onClick={e=> check(e) } checked = {props.checked} id = \"check-item\" type=\"checkbox\" aria-label=\"Checkbox for following text input\"/>\r\n                </div>\r\n            </div>\r\n            <textarea id = {props.id} onChange = {e=>setChange(e)} value = {changeInput}   class=\"form-control\"  rows=\"1\" name = {props.name}></textarea>\r\n            \r\n         </div>\r\n   </form>\r\n    )\r\n}\r\n\r\nexport {PriorityLists};\r\n\r\n","import React, {useState, useEffect} from \"react\";\r\nimport {Delete, Refresh, Add} from \"../components/Actions\";\r\nimport {Header} from \"../components/Header\";\r\nimport {PriorityLists} from \"../components/PriorityLists\";\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport { serialize} from \"react-serialize\";\r\nimport PriorityContext from \"../components/PriorityContext\";\r\nimport jwt_decode from \"jwt-decode\"\r\n \r\nfunction Task() {\r\n   \r\n\r\n  \r\n    const [toDo, setToDo] = useState([])\r\n    const [idsToRefresh, setIdsToRefresh] = useState([]);\r\n    const [filter_items, setFilterItems] = useState(false);\r\n    const [ids, setIds] = useState([]);\r\n    const {token} = React.useContext(PriorityContext);\r\n    const decodedPublicId = jwt_decode(token)['public_id'];\r\n    const [refresh, setRefresh] = useState(false)\r\n\r\n    useEffect(()=> {\r\n        \r\n        let arr = [];\r\n        for(let i=0; i < localStorage.length; i++) {\r\n            let getKey = localStorage.key(i);\r\n            let value = JSON.parse(localStorage.getItem(getKey));\r\n            if(value.unique_key == \"toDoList\" && value.public_id == decodedPublicId) \r\n                arr.push({_Id: getKey, item_value: <PriorityLists id = {getKey} checked = {false} addIds = {addIds} local_storage ={ls} text_value = {value.value}  />}); \r\n        }\r\n\r\n    \r\n        setToDo(toDo.concat([...arr, toDo]));\r\n        \r\n    }, [])\r\n    \r\n\r\n \r\n\r\n\r\n\r\n    \r\n    useEffect(() => {\r\n        if(toDo[0] !== undefined) {\r\n\r\n            if(filter_items) {\r\n                setToDo(toDo.filter(item=> {\r\n                    return !ids.includes(item._Id);\r\n                }))\r\n                ids.forEach(item=> {\r\n                    localStorage.removeItem(item);\r\n                })\r\n            }\r\n\r\n            if(refresh) {\r\n                setToDo(toDo.filter(item=> {\r\n                    return !idsToRefresh.includes(item._Id);\r\n                }))\r\n        \r\n                for(let i=0; i < localStorage.length; i++) {\r\n                    let getKey = localStorage.key(i);\r\n                    let value = JSON.parse(localStorage.getItem(getKey));\r\n                    if(value.unique_key == \"toDoList\" && value.public_id == decodedPublicId) {\r\n                        localStorage.removeItem(getKey);\r\n                    }\r\n                }\r\n            }\r\n           \r\n           \r\n        }\r\n\r\n\r\n    }, [filter_items, refresh]);\r\n\r\n    function addIds(checked, id_to_be_deleted) {\r\n        if(!checked) {\r\n            setIds((item)=> [...item, id_to_be_deleted]);\r\n            \r\n        }\r\n        else {\r\n            setIds(ids.filter(item=> {\r\n                return item !== id_to_be_deleted;\r\n            }))\r\n        }\r\n    }\r\n    \r\n    function ls(e) {\r\n    \r\n        localStorage.setItem(e.target.id, serialize({public_id: decodedPublicId, unique_key: \"toDoList\", value:e.target.value}));\r\n        \r\n        \r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n    function addToDos() {\r\n        const id = uuidv4();\r\n \r\n        setToDo(toDo.concat({_Id: id, item_value: <PriorityLists id = {id} checked = {false} addIds = {addIds} local_storage ={ls} text_value = {null}   /> }));\r\n        setIdsToRefresh(idsToRefresh.concat(id));\r\n   \r\n    }\r\n\r\n  \r\n\r\n\r\n\r\n\r\n    return (\r\n    <div className = \"main-content\">\r\n        <div className = \"container-fluid\">\r\n            <div className = \"row underline\">\r\n                <div className= \"col\">\r\n                    <div className = \"row\">\r\n                    <div className = \"col-3 pt-2\">\r\n                        <Refresh setRefresh = {setRefresh} refresh = {refresh} />\r\n                    </div>\r\n\r\n                    <div className = \"col-6 text-center\">\r\n                        <Header header ={\"Tasks\"}/>\r\n                    </div>\r\n\r\n                    <div className = \"col-3 pt-2\">\r\n                      \r\n                        <Delete setFilterItems = {setFilterItems} filter = {filter_items} />\r\n                       \r\n                    </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div className = \"row\">\r\n                <div className = \"col\">\r\n          \r\n                   {\r\n                   \r\n                   \r\n                   toDo.map(item=> {\r\n                       return (<div key = {item._Id}> \r\n                       <ul>\r\n                           <li>{item.item_value}</li>\r\n                         \r\n                       </ul>\r\n                       </div>)\r\n                   })}\r\n                    \r\n                   \r\n \r\n                    \r\n                </div>\r\n            </div>\r\n\r\n\r\n            <div className = \"row\">\r\n                \r\n                <div className = \"col pr-4\">\r\n        \r\n                    <Add addToDos = {addToDos} />\r\n                \r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n        \r\n        </div>\r\n    </div>\r\n    \r\n    )\r\n}\r\n\r\nexport default Task;\r\n\r\n","import React from \"react\";\r\nimport { Button} from 'reactstrap';\r\nimport {Header} from \"../components/Header\";\r\nimport PriorityContext from \"../components/PriorityContext\";\r\nimport {useHistory} from \"react-router-dom\";\r\nfunction Settings() {\r\n\r\n    const {setToken} = React.useContext(PriorityContext);\r\n    let history = useHistory();\r\n    const baseUrl  = \"https://desktop-reminder.herokuapp.com/logout\";\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n    \r\n        fetch(baseUrl, {\r\n          method: 'POST'\r\n      \r\n        }).then(response=>response.json()).\r\n        then(res=> {\r\n            if (res.logOut)\r\n                setToken(null)\r\n                history.push('/')\r\n                \r\n        })\r\n\r\n    }\r\n    return (\r\n        <form onSubmit = {handleSubmit}>\r\n            <div className = \"main-content\">\r\n                <div className = \"container-fluid\">\r\n                    <div className = \"row underline\">\r\n                        <div className= \"col\">\r\n                            <div className = \"row\">\r\n                    \r\n\r\n                                <div className = \"col text-center\">\r\n                                    <Header header = {\"Settings\"}/>\r\n                                </div>\r\n\r\n\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className = \"row\">\r\n                        \r\n                        <div className = \"col\">\r\n                            <Button className = \"adjust-content-btns\" variant=\"primary\" type=\"submit\" >Logout</Button>\r\n                    \r\n                        \r\n                        \r\n                        </div>\r\n                    </div>\r\n            \r\n\r\n\r\n\r\n            \r\n                </div>\r\n            </div>\r\n        </form>\r\n        \r\n    )\r\n}\r\n\r\nexport default Settings;\r\n\r\n","import React, {useState, useRef} from 'react';\r\nimport {Form} from \"react-bootstrap\";\r\nimport { Button } from 'react-bootstrap';\r\n\r\nimport { useHistory } from \"react-router-dom\";\r\nimport 'react-phone-number-input/style.css'\r\nimport PhoneInput from 'react-phone-number-input'\r\nimport PriorityContext from \"../components/PriorityContext\";\r\n\r\nfunction RegisterForm() {\r\n\r\n    const [passwordError, setPasswordError] = useState();\r\n    const [duplicateEmailError, setEmailError] = useState();\r\n    const {setAccountCreatedMessage} = React.useContext(PriorityContext);\r\n    const [value, setValue] = useState();\r\n    const form = useRef(null);\r\n    let history = useHistory();\r\n    const baseUrl = \"https://desktop-reminder.herokuapp.com/register\";\r\n\r\n    function redirectToSignIn() {\r\n        history.push(\"/\")\r\n    };\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        const data = new FormData(form.current);\r\n    \r\n        fetch(baseUrl, {\r\n          method: 'POST',\r\n          body: data\r\n        }).then(response=>response.json()).\r\n        then(res=> {\r\n            if(res.message) {\r\n                setAccountCreatedMessage(true);\r\n                history.push(\"/\");\r\n                \r\n            }\r\n\r\n            else if(res.passwordError) {\r\n                setPasswordError(res.passwordError);\r\n                setEmailError(\"\");\r\n            }\r\n\r\n            else  {\r\n                setEmailError(res.duplicateEmailError);\r\n                setPasswordError(\"\");\r\n            }\r\n        })\r\n\r\n    }\r\n    return (\r\n        <div class = \"w-50 text-center adjust-form\">\r\n            <div class = \"content-section \">\r\n                <Form ref={form} id = \"registerForm\" onSubmit = {handleSubmit} action = \"http://127.0.0.1:5000/register\" method = \"POST\">\r\n                    <legend class=\"border-bottom mb-4 pl-5\">Sign Up To Create Reminders!</legend>\r\n                    <fieldset class=\"form-group \">\r\n\r\n                    <Form.Group className = \"w-50 adjust-form-group \" controlId=\"formPersonName\"  >\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control type=\"text\" placeholder=\"Enter Your Name\" name = \"personName\" required/>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className = \" w-50 adjust-form-group\" controlId=\"formBasicEmail\">\r\n                        <Form.Text id=\"conformPasswordHelpBlock\" >\r\n                        {duplicateEmailError}\r\n                        </Form.Text>\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control type=\"email\" placeholder=\"Enter Your email\" name = \"personEmail\" required/>\r\n                        <Form.Text className=\"text-muted\">\r\n                         We'll never share your email with anyone else.\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n      \r\n                    <Form.Group className = \"w-50 adjust-form-group\" controlId=\"formPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Password\" name = \"password\" minlength = \"8\" maxlength = \"20\" required/>\r\n                        <Form.Text id=\"passwordHelpBlock\" muted>\r\n                        Your password must be 8-20 characters long.\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className = \"w-50 adjust-form-group\" controlId=\"formConfirmPassword\">\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Confirm Password\" name = \"confirmPassword\" required/>\r\n                        <Form.Text id=\"conformPasswordHelpBlock\" >\r\n                        {passwordError}\r\n                        </Form.Text>\r\n                    </Form.Group>\r\n\r\n                    <Form.Group className = \"w-50 adjust-form-group\" controlId=\"formNumber\">\r\n                        <Form.Label>Phone Number</Form.Label>\r\n                        <PhoneInput placeholder=\"Enter phone number\" value={value} onChange={setValue} name = \"phoneNumber\" required/>\r\n                        <small class=\"text-muted\">\r\n                        Your number is used for sending you reminders only.\r\n                        </small>\r\n                    </Form.Group>\r\n\r\n\r\n                    <Button className = \"adjust-content-btns\" variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                    </fieldset>\r\n                </Form>\r\n                </div>\r\n                <div class=\"border-top pt-3\">\r\n                    <small class=\"text-muted adjust-content-acc\">\r\n                        Already Have An Account? <a class=\"ml-2\" onClick = {redirectToSignIn}>Sign In</a>\r\n                    </small>\r\n                </div>\r\n        </div>\r\n        \r\n\r\n        \r\n       \r\n      \r\n    );\r\n    \r\n}\r\n\r\nexport default RegisterForm;","import React, {useState, useRef} from 'react';\r\nimport {Form} from \"react-bootstrap\";\r\nimport { Button } from 'react-bootstrap';\r\n\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nimport PriorityContext from \"../components/PriorityContext\";\r\nfunction LoginForm() {\r\n\r\n    const {setToken,showAccountCreatedMessage} = React.useContext(PriorityContext);\r\n    const [error, setError] = useState();\r\n    let history = useHistory();\r\n    const form = useRef(null);\r\n    const baseUrl = \"https://desktop-reminder.herokuapp.com/login\";\r\n\r\n\r\n   \r\n\r\n    function redirectToRegister() {\r\n        history.push('/register')\r\n      \r\n    }\r\n \r\n \r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault();\r\n        const data = new FormData(form.current);\r\n    \r\n        fetch(baseUrl, {\r\n          method: 'POST',\r\n          body: data\r\n        }).then(response=>response.json()).\r\n        then(res=> {\r\n            if(res.token) {\r\n                setToken(res['token']);\r\n            } else {\r\n                setError(res.errorMessage);\r\n            }\r\n            \r\n        })\r\n\r\n    }\r\n\r\n    return (\r\n        <div class = \"w-50 text-center adjust-form\">\r\n            <div class = \"content-section \">\r\n                <Form ref={form} onSubmit = {handleSubmit} >\r\n                {showAccountCreatedMessage ? <div class=\"alert alert-success\" role=\"alert\">\r\n                Account Has Been Created! Pleae log in with your new account. \r\n                </div> :  <legend class=\"border-bottom mb-4 pl-5\">Sign In To Create Reminders!</legend>}\r\n    \r\n                    <fieldset class=\"form-group \">\r\n                    <small> {error} </small>\r\n                    <Form.Group className = \" w-50 adjust-form-group\" controlId=\"formBasicEmail\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control type=\"email\" placeholder=\"Enter Your email\"  name = \"personEmail\" />\r\n              \r\n                    </Form.Group>\r\n      \r\n                    <Form.Group className = \"w-50 adjust-form-group\" controlId=\"formPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control type=\"password\" placeholder=\"Password\" name = \"password\"  />\r\n                  \r\n                    </Form.Group>\r\n\r\n          \r\n\r\n\r\n                    <Button className = \"adjust-content-btns\" variant=\"primary\" type=\"submit\">\r\n                        Submit\r\n                    </Button>\r\n                    </fieldset>\r\n                </Form>\r\n                </div>\r\n                <div class=\"border-top pt-3\">\r\n                    <small class=\"text-muted adjust-content-acc\">\r\n                        Don't Have An Account? <a class=\"ml-2\" onClick = {redirectToRegister} >Sign Up</a>\r\n                    </small>\r\n                </div>\r\n        </div>\r\n        \r\n\r\n        \r\n       \r\n      \r\n    );\r\n    \r\n}\r\n\r\nexport default LoginForm;","import React, {useState, useEffect} from 'react';\nimport NavBar from \"./Navbar\";\nimport Reminder from \"../Reminder/reminder\";\nimport Home from \"../Home/home\";\nimport Task from \"../Tasks/tasks\";\nimport Settings from \"../Settings/settings\"\nimport {Switch,Route } from \"react-router-dom\";\nimport PriorityContext from \"../components/PriorityContext\";\nimport RegisterForm from \"./RegisterForm\"\nimport LoginForm from \"./LoginForm\"\nfunction App() {\n  \n  \n\n  const [token, setToken] = useState(null);\n  const [showAccountCreatedMessage, setAccountCreatedMessage] = useState(false);\n\n  \n  return ( \n    token ? ( \n    <div>\n      <NavBar />\n      <Switch>\n        <Route exact path = \"/quote\" >\n          <PriorityContext.Provider value= {{token}} >\n            <Home />\n            \n          </PriorityContext.Provider>\n        </Route>\n\n        <Route exact path = \"/reminders/user\">\n          <PriorityContext.Provider value = {{token}}>\n            <Reminder />\n          </PriorityContext.Provider>\n        </Route>\n\n      \n\n        <Route path = \"/tasks\">\n          <PriorityContext.Provider value= {{token}} >\n            <Task />\n          </PriorityContext.Provider>\n        </Route>\n\n        <Route path = \"/settings\">\n          <PriorityContext.Provider value= {{setToken}}>\n            <Settings />\n          </PriorityContext.Provider>\n        </Route>\n     \n      \n      </Switch>\n  \n    </div>):\n      <Switch>\n        <Route exact path = \"/\">\n          <PriorityContext.Provider value= {{setToken, showAccountCreatedMessage, setAccountCreatedMessage}} >\n            <LoginForm  />\n          </PriorityContext.Provider>\n      \n        </Route>\n\n        <Route path = \"/register\">\n          <PriorityContext.Provider value= {{setAccountCreatedMessage}}>\n            <RegisterForm/>\n          </PriorityContext.Provider>\n        \n        </Route>\n      </Switch>\n   \n  )\n}\n\nexport default App;\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nReactDOM.render(\r\n\r\n<BrowserRouter> \r\n    <App /> \r\n</BrowserRouter>, \r\ndocument.getElementById(\"root\")\r\n);"],"sourceRoot":""}